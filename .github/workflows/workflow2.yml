# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js Test

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    env:
      PORT: ${{ secrets.PORT }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USER: ${{ secrets.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_POOL_MAX: ${{ secrets.DATABASE_POOL_MAX }}
      DATABASE_POOL_MIN: ${{ secrets.DATABASE_POOL_MIN }}
      DATABASE_POOL_ACQUIRE: ${{ secrets.DATABASE_POOL_ACQUIRE }}
      DATABASE_POOL_IDLE: ${{ secrets.DATABASE_POOL_IDLE }}
      DROP_DATABASE: ${{ secrets.DROP_DATABASE }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: | 
        echo "DATABASE_NAME: ${{ secrets.DATABASE_NAME }}"
    - run: npm run build --if-present
    - run: npm install
    - run: npm run test
